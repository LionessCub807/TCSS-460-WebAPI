{
	"info": {
		"_postman_id": "7a4a6a8a-9a99-4533-84d6-b8f71108f57d",
		"name": "Retrieve Book by Year",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43663289",
		"_collection_link": "https://team11-9261.postman.co/workspace/Messages~a9b27417-1fcc-424c-a0f3-4860e822c7b4/collection/43663289-7a4a6a8a-9a99-4533-84d6-b8f71108f57d?action=share&source=collection_link&creator=43663289"
	},
	"item": [
		{
			"name": "Successful Retrieval",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains entries and pagination\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"entries\");\r",
							"    pm.expect(jsonData).to.have.property(\"pagination\");\r",
							"    pm.expect(jsonData.pagination).to.have.property(\"totalRecords\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/year/2017",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"year",
						"2017"
					]
				}
			},
			"response": []
		},
		{
			"name": "No Books Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains not found message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"There are no books listed as published in 1900\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/year/1200",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"year",
						"1200"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Year Parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains invalid year message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Invalid year parameter provided - please refer to documentation\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/year/abcd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"year",
						"abcd"
					]
				}
			},
			"response": []
		},
		{
			"name": "Default Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains entries and pagination\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"entries\");\r",
							"    pm.expect(jsonData).to.have.property(\"pagination\");\r",
							"    pm.expect(jsonData.pagination.limit).to.eql(10); // Default limit\r",
							"    pm.expect(jsonData.pagination.offset).to.eql(0); // Default offset\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/year/2016",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"year",
						"2016"
					]
				}
			},
			"response": []
		},
		{
			"name": "Server Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains server error message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"server error - contact support\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/year/2016",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"year",
						"2016"
					]
				}
			},
			"response": []
		}
	]
}