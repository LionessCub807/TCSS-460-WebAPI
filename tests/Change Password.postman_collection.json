{
	"info": {
		"_postman_id": "88826f17-3a44-4742-879f-6c04f4f517ad",
		"name": "Change Password",
		"description": "For these set's of test we have to first make get a token. Which is what Register and Login are for. Once we have that we can then run the PUT requests. For the last test, User Not Found, it requires that we have an access token but it can't be linked to any user. The Get reuest for generating a token is what it will be for, use that token inside the header for User Not Found.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44260564",
		"_collection_link": "https://billmarban.postman.co/workspace/bill-marban's-Workspace~57f780dd-f71a-4130-886b-acacda14dc2d/collection/44260564-88826f17-3a44-4742-879f-6c04f4f517ad?action=share&source=collection_link&creator=44260564"
	},
	"item": [
		{
			"name": "Register First Time",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"firstname\",\n    \"lastname\": \"lastname\",\n    \"email\": \"first.last@email.com\",\n    \"password\": \"password123\",\n    \"username\": \"firstlast\",\n    \"role\": \"1\",\n    \"phone\": \"0123456789\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"first.last@email.com\",\n    \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success property\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data).to.have.property('success');",
							"    pm.expect(data.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains success message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"Password successfully changed\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjozLCJpYXQiOjE3NDYzOTIyMzgsImV4cCI6MTc0NzYwMTgzOH0.t7YBckQqur37kQnzYMhkPHdjRJ3OO5NDrODuwH1yiH0",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjozLCJpYXQiOjE3NDYzOTIyMzgsImV4cCI6MTc0NzYwMTgzOH0.t7YBckQqur37kQnzYMhkPHdjRJ3OO5NDrODuwH1yiH0",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"password123\",\n    \"newPassword\": \"password1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Reset Password For Testing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success property\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data).to.have.property('success');",
							"    pm.expect(data.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Response contains success message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"Password successfully changed\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjozLCJpYXQiOjE3NDYzOTIyMzgsImV4cCI6MTc0NzYwMTgzOH0.t7YBckQqur37kQnzYMhkPHdjRJ3OO5NDrODuwH1yiH0",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjozLCJpYXQiOjE3NDYzOTIyMzgsImV4cCI6MTc0NzYwMTgzOH0.t7YBckQqur37kQnzYMhkPHdjRJ3OO5NDrODuwH1yiH0",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"password1234\",\n    \"newPassword\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "No oldPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains missing information error\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"Missing required information - Missing old/new password\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZmlyc3RuYW1lIiwicm9sZSI6MSwiaWQiOjMsImlhdCI6MTc0NjM5MjU3MSwiZXhwIjoxNzQ3NjAyMTcxfQ.cvTpEt845Yi1yodDlSLcu-utEUojBKoiQICk-ne2qkA",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"newPassword\": \"password1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Incorrect OldPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Response contains incorrect password error\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"Current password is incorrect\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZmlyc3RuYW1lIiwicm9sZSI6MSwiaWQiOjMsImlhdCI6MTc0NjM5MjU3MSwiZXhwIjoxNzQ3NjAyMTcxfQ.cvTpEt845Yi1yodDlSLcu-utEUojBKoiQICk-ne2qkA",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"incorrectPassword\",\n    \"newPassword\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "No newPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains missing information error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Missing required information - Missing old/new password\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZmlyc3RuYW1lIiwicm9sZSI6MSwiaWQiOjMsImlhdCI6MTc0NjM5MjU3MSwiZXhwIjoxNzQ3NjAyMTcxfQ.cvTpEt845Yi1yodDlSLcu-utEUojBKoiQICk-ne2qkA",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid new Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains invalid password error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Invalid password - must be greater than 7 characters\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZmlyc3RuYW1lIiwicm9sZSI6MSwiaWQiOjMsImlhdCI6MTc0NjM5MjU3MSwiZXhwIjoxNzQ3NjAyMTcxfQ.cvTpEt845Yi1yodDlSLcu-utEUojBKoiQICk-ne2qkA",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"password123\",\n    \"newPassword\": \"short\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Response has success property\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data).to.have.property('success');",
							"    pm.expect(data.success).to.eql(false);",
							"});",
							"",
							"pm.test(\"Response contains success message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"Token is not valid\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer NotAValidCredential",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"password123\",\n    \"newPassword\": \"password1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response contains user not found error\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"User not found\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVGVzdCBVc2VyIiwicm9sZSI6IkFkbWluIiwiaWQiOjk5OSwiaWF0IjoxNzQ2NDA2OTYxLCJleHAiOjE3NDc2MTY1NjF9.NMxQ6w2Cr77ayN4ofwpTxCJ63MtIWChnBvnOIXLlsuo",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"oldPassword\": \"password123\",\n    \"newPassword\": \"password1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/changePassword/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"changePassword",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Valid Token But Has No User",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/super/secrete/test/do/not/use/generate-token",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"super",
						"secrete",
						"test",
						"do",
						"not",
						"use",
						"generate-token"
					]
				}
			},
			"response": []
		}
	]
}